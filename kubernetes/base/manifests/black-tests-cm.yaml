apiVersion: v1
kind: ConfigMap
metadata:
  name: black-tests
  namespace: black
data:
  run-tests.sh: |
    #!/bin/bash
    
    # Define constants
    COLOR="black"
    LOG_DIR="/var/log/cka-tests-${COLOR}"
    
    # Create the log directory if it doesn't exist
    mkdir -p "${LOG_DIR}"
    
    # Function to install dependencies with retry
    install_deps() {
      if ! (apt-get update && apt-get install -y strace curl apparmor apparmor-utils); then
        echo "Failed to install dependencies at $(date)" >> "${LOG_DIR}/install-error.log"
        return 1
      fi
      return 0
    }

    # Keep trying to install dependencies until successful
    until install_deps; do
      sleep 5
    done

    # Function to enable AppArmor
    enable_apparmor() {
      # First check if the module is loaded
      if ! grep -q "Y" /sys/module/apparmor/parameters/enabled 2>/dev/null; then
        echo "Loading AppArmor module..."
        modprobe apparmor
      fi

      # Check if securityfs is mounted
      if ! mount | grep -q 'securityfs'; then
        echo "Mounting securityfs..."
        mount -t securityfs securityfs /sys/kernel/security
      fi

      # Mount AppArmor filesystem if not already mounted
      if ! mount | grep -q '/sys/kernel/security/apparmor'; then
        echo "Mounting AppArmor filesystem..."
        mount -t securityfs securityfs /sys/kernel/security
        mkdir -p /sys/kernel/security/apparmor
      fi

      # Try to start AppArmor service if systemd is available
      if command -v systemctl >/dev/null 2>&1; then
        systemctl enable apparmor 2>/dev/null
        systemctl start apparmor 2>/dev/null
      fi
    }

    # Try to enable AppArmor if it's not already running
    enable_apparmor

    while true; do
      # Syscall tests
      date >> "${LOG_DIR}/test-syscalls.log"
      strace -c sleep 1 2>> "${LOG_DIR}/test-syscalls.log"
      
      # AppArmor tests
      date >> "${LOG_DIR}/tests-apparmor.logs"
      
      # Check AppArmor status comprehensively
      apparmor_status >> "${LOG_DIR}/tests-apparmor.logs" 2>&1 || {
        echo "Attempting to enable AppArmor..." >> "${LOG_DIR}/tests-apparmor.logs"
        enable_apparmor
        if apparmor_status >/dev/null 2>&1; then
          apparmor_status >> "${LOG_DIR}/tests-apparmor.logs"
        else
          echo "AppArmor status: $(apparmor_status 2>&1)" >> "${LOG_DIR}/tests-apparmor.logs"
          echo "Module status: $(cat /sys/module/apparmor/parameters/enabled 2>/dev/null)" >> "${LOG_DIR}/tests-apparmor.logs"
          echo "Mount status: $(mount | grep apparmor)" >> "${LOG_DIR}/tests-apparmor.logs"
        fi
      }
          
      # Inter-service tests
      if hostname | grep -q white; then
        curl http://black.black.svc.cluster.local >> "${LOG_DIR}/test-curl.log" 2>&1
      else
        curl http://white.white.svc.cluster.local >> "${LOG_DIR}/test-curl.log" 2>&1
      fi
      
      sleep 5
    done